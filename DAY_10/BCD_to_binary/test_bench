module test_bench();
    reg  [3:0] b;    
    wire [3:0] d;       

    BCD_to_binary uut (
        .b(b),
        .d(d)
    );

    initial begin
        // Test all valid BCD digits 0 to 9
        b = 4'b0000; #1; $display("BCD 4'b0000 = Binary %b (%0d)", d, d);
        b = 4'b0001; #1; $display("BCD 4'b0001 = Binary %b (%0d)", d, d);
        b = 4'b0010; #1; $display("BCD 4'b0010 = Binary %b (%0d)", d, d);
        b = 4'b0011; #1; $display("BCD 4'b0011 = Binary %b (%0d)", d, d);
        b = 4'b0100; #1; $display("BCD 4'b0100 = Binary %b (%0d)", d, d);
        b = 4'b0101; #1; $display("BCD 4'b0101 = Binary %b (%0d)", d, d);
        b = 4'b0110; #1; $display("BCD 4'b0110 = Binary %b (%0d)", d, d);
        b = 4'b0111; #1; $display("BCD 4'b0111 = Binary %b (%0d)", d, d);
        b = 4'b1000; #1; $display("BCD 4'b1000 = Binary %b (%0d)", d, d);
        b = 4'b1001; #1; $display("BCD 4'b1001 = Binary %b (%0d)", d, d);
        b = 4'b1010; #1; $display("BCD 4'b1010 = Binary %b (%0d)", d, d);
        
       
        $finish;
    end
endmodule
